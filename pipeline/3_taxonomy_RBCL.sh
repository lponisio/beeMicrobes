## *****************************************************************************
##                            RBCL
## *****************************************************************************

## *****************************************************************************
# 1. CLASSIFY TAXONOMY WITH RDP AND NCBI
## *****************************************************************************

## The next steps are to classify taxonomy with a trained RBCL
## classifier. But Qiime2 does not have a rbcl classifier for
## download.

#1. PREP RDP CLASSIFIER
## We will use the Bell et al. RBCL RDP classifier, described here:
#https://github.com/KarenBell/rbcL-dual-index-metabarcoding

#This tutorial describes how to train and apply their RBCL classifier.
#However, we won't use their entire pipeline because their script
#processes raw files, then joins them, demultiplexes them, etc, and
#only assigns taxonomy at the end.  All we need to do is use the
#classifier they developed. Follow the script below, which we
#modified.

#Downloaded the classifier, which is already trained,
#from https://gitlab.umiacs.umd.edu/derek/qiime/tree/master/rdp_classifier_2.2

#go to Bell and Brosi's rbcl reference library: https://figshare.com/collections/rbcL_reference_library/3466311/1
#the "new" 2021 reference library is formatted for their DADA2 pipeline here: https://figshare.com/collections/rbcL_reference_library_July_2021/5504193

#Download "rbcl_utax_trained.zip" and "rbcl_rdp_trained_reference_database" 
#into a folder called RBCLclassifierRDP in your local working directory. unzip the files.

## skip if already done once!
mkdir RBCLclassifierRDP
cd ../RBCLclassifierRDP

unzip qiime-master-rdp_classifier_2.2.zip

unzip rbcL_rdp_trained_reference_database.zip

unzip rbcL_utax_trained.zip

#we will work on the rep-seqs object which is a qiime artifact
#currently, so export it to a fasta file.

#first cd back to the main SIskyIslands folder. NOTE: use syntax
#below; online docs for qiime tools export have different syntax that
#doesnt work.

# *****************************************************************************



docker run -it \
  -v /Volumes/bombus/ncullen/University\ of\ Oregon\ Dropbox/Nevin\ Cullen/beeMicrobes_saved/beeMicrobes_pipeline_outpu \
  qiime2/core

cd ../../mnt/beeMicrobes_saved/beeMicrobes_pipeline_output/merged

qiime tools export \
  --input-path RBCL/rep-seqs-RBCL.qza \
  --output-path RBCL
  
#Take the file that was generated "dna-sequences.fasta" and rename it
#"rep-seqs-dada2RBCL.fasta" and move it where you want in your
#directory

cd RBCL
mv dna-sequences.fasta rep-seqs-RBCL.fasta

exit

# *****************************************************************************

#2. CLASSIFY TAXONOMY WITH RDP
# First make sure you have java installed
# exit qiime2 with "exit" command

# We ran two different scripts to generate two different taxonomic
# files. The first is a fixrank file. the second is an allrank file
# (the default output). See this link for description:
# https://github.com/rdpstaff/classifier

# NOTE: you may need to download a java developer kit (JDK) from Oracle
# for the java command line stuff to work

## https://www.oracle.com/java/technologies/javase-jdk15-downloads.html

cd /Volumes/bombus/ncullen/University\ of\ Oregon\ Dropbox/Nevin\ Cullen/beeMicrobes_saved/beeMicrobes_pipeline_output

#this one gives taxonomy to species (we ended up only using this one)
java -Xmx2g -jar classifiers/RBCLclassifierRDP/qiime-master-rdp_classifier_2.2/rdp_classifier_2.2/rdp_classifier-2.2.jar classify -t classifiers/RBCLclassifierRDP/rbcL_rdp_trained/rbcL.properties -o merged/RBCL/rbcl_classified_rdp.txt -q merged/RBCL/rep-seqs-RBCL.fasta

#Our resulting taxonomic IDs are found in two sheets in the merged/RBCL folder

# ****************************************************************************
#3. CLASSIFY TAXONOMY WITH BLAST / NCBI

#Let's compare sequences we get when using the RDP Classifier and NCBI
#(NCBI generated by BLAST tool).

#3.1: database building

 ## You likely don't need to make the database de-novo; copying the
 ## whole RBCLclassifierNCBI folder from a recent pipeline will
 ## work. if so, skip down to 3.2
 ### Database last updated in 2023
 
##We are going to use BioPerl to blast against NCBI, you need to get a
## package installer that has python arguments and stuff install
## package installer for your computer from
## ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/

# continue as a guest

mkdir RBCLclassifierNCBI

#We used the .dmg file (second to last one) for a Mac
#We put it in "RBCLclassifierNCBI"

## When running BLAST against a local database downloaded to your
## computer, it is storage intensive to use the entire NCBI
## database. Instead, download just the nucleotide files you need.

## Go to NCBI and manually download RBCL files into your working
## directory. Go to https://www.ncbi.nlm.nih.gov/ and press download,
## search rbcl, press nucleotide under "Genomes". select what you
## want, use "send to" bottom at upper right corner and download as
## fasta. We downloaded plant nucleotide data and called it
## "rbcL_only_NCBI.fasta". Put it in "RBCL classifier NCBI" folder.

## then download gi_taxid_nucl.dmp from
## ftp://ftp.ncbi.nih.gov/pub/taxonomy/ expand it, put the dmp into
## the appropriate directory

## NOTE: you have to add the makeblastdb executable from the
## ncbi-blast-2.10.0+ bin to your $PATH! Just drag and drop it in
## Users/Ponisio/perl5, for example

## NOTE: try running this code in terminal if having trouble finding the correct directory
## export PATH=$PATH:/Volumes/bombus

# #Use the fasta file to create a database that we'll then use in
# #BioPerl

cd classifiers

## KAYE THINKS WE CAN SUBSET THE FASTA FILE TO THE SPECIES WE ARE
## INTERESTED IN AND THEN USE THAT IN SUBSEQENT STEPS

#makeblastdb -in -taxid_map gi_taxid_nucl.dmp RBCLclassifierNCBI/rbcL_only_NCBI.fasta -out RBCLclassifierNCBI/rbcL_only_DB -parse_seqids -dbtype nucl
## can't find .dmp file on ncbi website anymore....
## makeblastdb -in -taxid_map gi_taxid_nucl.dmp RBCLclassifierNCBI/rbcL_only_NCBI_Updated_2023.fasta -out RBCLclassifierNCBI/2023_rbcL_only_DB -parse_seqids -dbtype nucl 


## if this all worked, you should get a series of files called
## "rbcL_only_DB" with some extension or numerical at the end. These
## are ALL your database, and one of the files (the .nal) is an alias
## file that lets everything talk to each other

# ****************************************************************************

## 3.2: use a perl script that Quinn wrote to blast against your local
## database

## open NCBI docker containter, we ran cpan commands (to install
## bioperl) within the container and they installed correctly. We used
## find -name to find them and then updated the .pl run file with
## their location on by setting lib (line 2).

## the container includes blastn in usr

# docker run -itv ~/Dropbox/skyIslands_saved/SI_pipeline:/mnt/SI_pipeline ncbi/blast
exit

## if running overnight on lab computer or other mac, could be useful to open
## a mac terminal and run the caffeinate command which will prevent computer from 
## forcing a shutdown overnight that will close the docker container
## once completed, you can manually close the terminal

docker run -it \
  -v /Volumes/bombus/ncullen/University\ of\ Oregon\ Dropbox/Nevin\ Cullen/beeMicrobes_saved/beeMicrobes_pipeline_output:/mnt/beeMicrobes_pipeline_output \
  ncbi/blast

cpan App::cpanminus

cpanm Bio::SearchIO

cpanm Bio::Tools::Run::StandAloneBlast --force 


cd ../../mnt/beeMicrobes_pipeline_output/

## Now you need to modify the BlastToTableexistingdb.pl file with
## correct paths for the packages it needs. You should be able to find
## the files with a find command, but this didn't work for me just
## now. Luckily, they were in the same place in the

## container as last time: /usr/local/share/perl/5.28.1/. 
## so line 2 of the .pl script should read: 

## use lib '/usr/local/share/perl/5.28.1/';

## that done, navigate to your SI_pipeline folder and run the script

## top match
#perl classifiers/RBCLclassifierNCBI/BlastToTableexistingdb.pl merged/RBCL/rep-seqs-RBCL.fasta classifiers/RBCLclassifierNCBI/rbcL_only_DB > merged/RBCL/rbcl_classified_NCBI.txt
perl classifiers/RBCLclassifierNCBI/BlastToTableexistingdb.pl merged/RBCL/rep-seqs-RBCL.fasta classifiers/RBCLclassifierNCBI/2023_rbcL_only_DB > merged/RBCL/rbcl_classified_NCBI.txt

## top 10 matches (did this work????)
perl classifiers/RBCLclassifierNCBI/BlastToTableexistingdb_top_10.pl merged/RBCL/rep-seqs-RBCL.fasta classifiers/RBCLclassifierNCBI/2023_rbcL_only_DB > merged/RBCL/rbcl_classified_NCBI_top_10.txt

## *****************************************************************************
# 2. ASSIGN TAXONOMY in R SCRIPT and MANUALLY
## *****************************************************************************

## We looked at the RBCL taxonomic determinations generated by RDP and BLAST and compared them 
## using R script called "3_1_pipelineRBCL.R"

## We generated a set of rules to determine which classifier to use for each query. The rules we used were
## 1	If genus matches on NBCI and RDP, use that genus.
## 2    If species matches on NCBI and RDP, use that species
## 3	If genus/sp do not match, look up samples in veg data. If one sample is present in the veg data and other is absent, use that genus
## 4	if both are present in veg data, use NCBI unless the RDP classifier is over .75 confidence, in which case, use your best judgement
## 5	If neither are present in veg, look at at top 10 NCBI BLAST hits. If any hit is in the veg data or in the region, use it as final call
## 6    If top 10 hits don't get you closer, use family level ID if it's the same for RDP/NCBI and feasible for the region
## 7 	 We have data for what bees were caught on. There are a couple species that bees were caught on, but their pollen rbcL matched with something else as the top hit. 
##       What they had been caught on did match in NCBI though, with only a single snp difference causing the known species to not be the first hit (e.g., 176/179 bp matches for Ipomoea wrightii vs 175/179 for Convolvulus arvensis). 
##       Following this logic, we manually changed I. wrightii to Con arv, and Arctotheca calendula to H. annuus.   

## We saved our final determinations into our merged/RBCL folder as a .txt called "taxonomyRBCL.txt" 
## We need to make sure this file is in the right format for the next steps in qiime to process. 
## Label the first column "Feature ID" and the second column "Taxon". Feature ID is the same as the query


## *****************************************************************************
# 2. FILTER RBCL (Part A)
## *****************************************************************************

# Go through and filter out unwanted reads on the merged tables and repseqs.
# We can't do all the filtering steps on the merged files, 
# but we can do some, then we make a phylogenetic tree, then go back and filter round-specific issues

#make sure to enter back into the qiime environment using Docker

docker run -it \
  -v /Volumes/bombus/ncullen/University\ of\ Oregon\ Dropbox/Nevin\ Cullen/beeMicrobes_saved/beeMicrobes_pipeline_output:/mnt/beeMicrobes_pipeline_output \
  qiime2/core

#check paths and working directory are correct

#cd ../mnt/SI_pipeline/merged/RBCL
cd ../../mnt/beeMicrobes_pipeline_output/merged/RBCL

#before filtering, convert our .txt file that has final taxonomic determinations into a qza file called "taxonomyRBCL.qza"

qiime tools import \
  --type 'FeatureData[Taxonomy]' \
  --input-path taxonomyRBCL.txt \
  --output-path taxonomyRBCL.qza

qiime metadata tabulate --m-input-file taxonomyRBCL.qza --o-visualization taxonomyRBCL.qzv

## FILTER 1: Remove all samples that didn't have an NCBI match 

## We obtained RDP reads for some samples that actually that had non RBCL amplicons because RDP is less specific 
## We want to filter out all reads from sequences that do not have NCBI matches and only have RDP calls. 
## (In our NCBI database, we locally downloaded ONLY RBCL reads, so these reads are reliable). 

##We manually created a metadata file that contains all the query numbers (aka feature IDs) for samples that have both RDP and NCBI reads. 
##We called this file "featurestokeep.txt" inside "merged/RBCL" folder

cd merged/RBCL

qiime feature-table filter-features --i-table tableRBCL.qza --m-metadata-file featurestokeep.txt --o-filtered-table tablefilt1.qza
 
## FILTER 2: filter out all sequences that came out in less than 2 samples

qiime feature-table filter-features --i-table tablefilt1.qza --p-min-samples 2 --o-filtered-table tablefilt2.qza

# REFILTER REPSEQS

qiime feature-table filter-seqs --i-data rep-seqs-RBCL.qza --i-table tablefilt2.qza --o-filtered-data rep-seqs-RBCL-filtered.qza

qiime feature-table tabulate-seqs --i-data rep-seqs-RBCL-filtered.qza --o-visualization rep-seqs-RBCL-filtered.qzv
qiime tools view rep-seqs-RBCL-filtered.qzv

### ************************************************************************
## 3. #GENERATE TREE FOR PHYLOGENETIC DIVERSITY ANALYSES
### ************************************************************************

# generate a tree with the merged data

qiime phylogeny align-to-tree-mafft-fasttree \
  --i-sequences rep-seqs-RBCL-filtered.qza \
  --o-alignment aligned_repseqsRBCL.qza \
  --o-masked-alignment masked_aligned_repseqsRBCL.qza \
  --o-tree unrooted_treeRBCL.qza \
  --o-rooted-tree rooted-treeRBCL.qza
  
### *************************************************************************
## 4. SPLIT MERGED DATA TO CONTINUE CLEANING
### ************************************************************************


# We're not doing this step... I left this here to make renumbering easier...

### *************************************************************************
# 3. FILTERING STEPS (PART B)
### *************************************************************************


#FILTER  3:
#remove control samples. Refer to your sample maps and journal notes 
#Make a metadata file called "samplestokeep.txt" with the sample IDs you want to keep

# qiime feature-table filter-samples --i-table dada2-RBCL/tablefilt2.qza --m-metadata-file dada2-RBCL/samplestokeep.txt --o-filtered-table dada2-RBCL/tablefilt3.qza

## 3a. Let's specifically look at sequences in our controls and remove the bacteria that are in them

qiime taxa barplot --i-table split/tableR0.qza --i-taxonomy taxonomyRBCL.qza --m-metadata-file maps/SI2018mapRBCL.txt --o-visualization split/taxa-bar-plotsR0.qzv

mkdir f1_taxa_barplots

# qiime taxa barplot --i-table split/tableR1.qza --i-taxonomy taxonomyRBCL.qza --m-metadata-file maps/SI2019_R1mapRBCL.txt --o-visualization split/taxa-bar-plotsR1.qzv

## for each taxa bar plot, download the .csv (level 7) into a folder i made called "f1_taxa_barplots" inside "split"

## There are multiple ways to filter from here. 
## we used code from "3_2_pipeline16s.R" to generate a list of sequences in the controls
## use this list to write out code below hwere we remove specific sequences

## for this code that the nomenclature is really important, note the following:
## REMOVE ALL THE ENDING ;___
## sample :"Unassigned"

## use the following rationale for selecting bacterial sequences to remove:
## look at what bacteria show up our control samples. we then, for each one of these
## bacteria, look up if it is in all the samples or just that control and made a call about whether or not to remove it
## if bacteria is present in just the control sample, you want to remove it
## however, some are also present in a lot of other samples! we don't want to lose data. if bacteria is in the control AND in more than 30 samples just leave it and don't filter it out (10% of samples)
## you may want to make an exception if the bacterial contaminant is obviously present in one just one plate, because even though its in a lot of samples its likely a contaminant
## another exception is if you have the contaminant in a lot of samples BUT also in a lot of the controls, get rid of it


# R0 dna controls: DNActrl1
# R0 illumina controls:
# RBCLIlluminaCtrl1", "RBCLIlluminaCtrl2", "RBCLIlluminaCtrl3","RBCLIlluminaCtrl4
# there wasnt anything to remove. there was one pollen type in a control but it will get removed when controls are removed

# R1 illumina controls: 
# R1 dna controls:

# qiime taxa filter-table --i-table split/tableR1.qza --i-taxonomy taxonomyRBCL.qza --p-mode exact --p-exclude "Fagaceae sp. A" --o-filtered-table split/tableR1_f1.qza


# R2 illumina controls:
# R2 dna controls: 
# there wasnt anything to remove. there was one pollen type in a control but it will get removed when controls are removed
# some common pollens (like skyIslands) were also in the control but didnt want to remove these

# R3 illumina controls: 
# R3 dna controls: 
# there wasnt anything to remove. there was one pollen type in a control but it will get removed when controls are removed
# some common pollens (like skyIslands) were also in the control but didnt want to remove these

# R4 illumina controls: 
# R4 dna controls: 
# qiime taxa filter-table --i-table split/tableR4.qza --i-taxonomy taxonomyRBCL.qza --p-mode exact --p-exclude "Apiaceae sp. C",\
# "Apiaceae sp. G",\
# "Araceae sp. A" --o-filtered-table split/tableR4_f1.qza

#check it worked
# qiime taxa barplot --i-table split/tableR4_f1.qza --i-taxonomy taxonomyRBCL.qza --m-metadata-file maps/SI2019_R4mapRBCL.txt --o-visualization split/taxa-bar-plotsR4_f1.qzv



### *************************************************************************

## 3b. remove control samples. make a txt file with the list of IDs for samples you want to keep, where you remove control IDs. 
## the files are made inside split and called "R0samplesNoCtrl.txt", "R1samplesNoCtrl.txt", "R2samplesNoCtrl.txt", "R2samplesNoCtrl.txt", "R4samplesNoCtrl.txt" 

cd pathHere

qiime feature-table filter-samples --i-table path/tableX.qza --m-metadata-file path/merged_NoCtrl_map.txt --o-filtered-table path/tableX_f2.qza

# qiime feature-table filter-samples --i-table tableR0.qza --m-metadata-file ../maps/R0samplesNoCtrl.txt --o-filtered-table tableR0_f2.qza

## check it worked by making new taxabarplots without contaminants. use regular maps to RsamplesNoCtrl?

cd ../

qiime taxa barplot --i-table split/tableR0_f2.qza --i-taxonomy taxonomyRBCL.qza --m-metadata-file maps/sky2020mapRBCL_combined_repsremoved.txt --o-visualization split/taxa-bar-plotsR0_f2.qzv

# qiime taxa barplot --i-table split/tableR0_f2.qza --i-taxonomy taxonomyRBCL.qza --m-metadata-file maps/SI2018mapRBCL.txt --o-visualization split/taxa-bar-plotsR0_f2.qzv

## make sure to visualize and check to see if all were removed!!!!

### *************************************************************************
#4. DETERMINE SUBSAMPLE DEPTH
### *************************************************************************

#We want to make a rarefaction curve to see how subsampling depths influence our alpha diversity metrics.
#Open visualization in Qiime2 View and look at visualized table to see impact of different depths

# R0
qiime feature-table summarize --i-table split/tableR0_f2.qza --o-visualization split/tableR0_f2.qzv

qiime diversity alpha-rarefaction --i-table split/tableR0_f2.qza --i-phylogeny rooted-treeRBCL.qza --m-metadata-file maps/sky2020mapRBCL_combined_repsremoved.txt --o-visualization split/alphararefactRBCLR0_2000.qzv --p-max-depth 2000
# 1352, retain 66/78 samples (84.62%) and 89,232 (12.82%) features

# R1
qiime feature-table summarize --i-table split/tableR1_f2.qza --o-visualization split/tableR1_f2.qzv

qiime diversity alpha-rarefaction --i-table split/tableR1_f2.qza --i-phylogeny rooted-treeRBCL.qza --m-metadata-file maps/sky2020mapRBCL_combined_repsremoved.txt --o-visualization split/alphararefactRBCLR1_2000.qzv --p-max-depth 2000
# 1352, retain 54/73 samples (73.97%) and 73,008 (7.64%) features
	## don’t retain more than 80.82% until < 372

# R2
qiime feature-table summarize --i-table split/tableR2_f2.qza --o-visualization split/tableR2_f2.qzv

qiime diversity alpha-rarefaction --i-table split/tableR2_f2.qza --i-phylogeny rooted-treeRBCL.qza --m-metadata-file maps/sky2020mapRBCL_combined_repsremoved.txt --o-visualization split/alphararefactRBCLR2_2000.qzv --p-max-depth 2000
# 1352, retain 44/62 samples (70.97%) and 59,488 (12.67%) features
	## don’t retain more than 80.65% until < 358

# R3
qiime feature-table summarize --i-table split/tableR3_f2.qza --o-visualization split/tableR3_f2.qzv

qiime diversity alpha-rarefaction --i-table split/tableR3_f2.qza --i-phylogeny rooted-treeRBCL.qza --m-metadata-file maps/sky2020mapRBCL_combined_repsremoved.txt --o-visualization split/alphararefactRBCLR3_2000.qzv --p-max-depth 2000
# 1352, retain 64/74 samples (86.49%) and 86,528 (12.27%) features

## R4-7 (from lane 2, older samples) have much lower freq. per sample than R0-4
# R4
qiime feature-table summarize --i-table split/tableR4_f2.qza --o-visualization split/tableR4_f2.qzv

qiime diversity alpha-rarefaction --i-table split/tableR4_f2.qza --i-phylogeny rooted-treeRBCL.qza --m-metadata-file maps/sky2020mapRBCL_combined_repsremoved.txt --o-visualization split/alphararefactRBCLR4_2000.qzv --p-max-depth 2000
# 1352, retain 58/82 samples (70.73%) and 78,416 (8.69%) features
# 1130, retain 60/82 samples (73.17%) and 67,800 (7.52%) features
# 1000, retain 61/82 samples (74.39%) and 61,000 (6.76%) features
	## don’t retain more than 80.49% until < 528

# R5
qiime feature-table summarize --i-table split/tableR5_f2.qza --o-visualization split/tableR5_f2.qzv

qiime diversity alpha-rarefaction --i-table split/tableR5_f2.qza --i-phylogeny rooted-treeRBCL.qza --m-metadata-file maps/sky2020mapRBCL_combined_repsremoved.txt --o-visualization split/alphararefactRBCLR5_2000.qzv --p-max-depth 2000
# 1352, retain 20/62 samples (32.26%) and 27,040 (12.17%) features
# 1130, retain 22/62 (35.48%) samples and 24,860 (11.18%) features
# 1000, retain 22/62 (35.48%) samples and 22,000 (9.90%) features
	## don’t retain more than 80.65% until < 13
	### very low freq. per sample

# R6
qiime feature-table summarize --i-table split/tableR6_f2.qza --o-visualization split/tableR6_f2.qzv

qiime diversity alpha-rarefaction --i-table split/tableR6_f2.qza --i-phylogeny rooted-treeRBCL.qza --m-metadata-file maps/sky2020mapRBCL_combined_repsremoved.txt --o-visualization split/alphararefactRBCLR6_2000.qzv --p-max-depth 2000
# 1352, retain 45/74 samples (60.81%) and 60,840 (11.39%) features
# 1130, retain 47/69 (63.51%) samples and 53,110 (9.94%) features
# 1000, retain 48/69 (64.86%) samples and 48,000 (8.99%) features
	## don’t retain more than 81.08% until < 153

# R7
qiime feature-table summarize --i-table split/tableR7_f2.qza --o-visualization split/tableR7_f2.qzv

qiime diversity alpha-rarefaction --i-table split/tableR7_f2.qza --i-phylogeny rooted-treeRBCL.qza --m-metadata-file maps/sky2020mapRBCL_combined_repsremoved.txt --o-visualization split/alphararefactRBCLR7_2000.qzv --p-max-depth 2000
# 1352, retain 25/69 samples (36.23%) and 33,800 (16.60%) features
# 1130, retain 28/69 samples (40.58%) and 31,640 (15.54%) features
# 1000, retain 28/69 samples (40.58%) and 28,000 (13.75%) features
	## don’t retain more than 81.16% until < 36
	### very low freq. per sample


#For subsampling R0: 1,350  depth.  205 samples (83.67%): samples at the specified
#sampling depth. Out of 245 samples.
#qiime diversity alpha-rarefaction --i-table split/tableR0_f2.qza --i-phylogeny rooted-treeRBCL.qza --p-max-depth 1350 --m-metadata-file maps/SI2018mapRBCL.txt --o-visualization split/alphararefactRBCLR0.qzv

#qiime feature-table summarize --i-table split/tableR0_f2.qza --o-visualization split/tableR0_f2.qzv

#For subsampling R1: XX.  XX (XX%) samples at the specified sampling depth. Out of 318 samples

# qiime diversity alpha-rarefaction --i-table split/tableR1_f2.qza --i-phylogeny rooted-treeRBCL.qza --p-max-depth 10000 --m-metadata-file maps/SI2019_R1mapRBCL.txt --o-visualization split/alphararefactRBCLR1.qzv

# qiime feature-table summarize --i-table split/tableR1_f2.qza --o-visualization split/tableR1_f2.qzv


### *************************************************************************
# 5. ALPHA AND BETA DIVERSITY
### *************************************************************************

#Generate core metrics folder. This command makes the new directory and outputs a bunch of files in it
# make sured youre in "merged/RBCL"

mkdir final

qiime diversity core-metrics-phylogenetic --i-phylogeny rooted-treeRBCL.qza --i-table split/tableR0_f2.qza --p-sampling-depth 1352 --m-metadata-file maps/sky2020mapRBCL_combined_repsremoved.txt --output-dir final/core_metricsRBCLR0 --verbose

qiime diversity core-metrics-phylogenetic --i-phylogeny rooted-treeRBCL.qza --i-table split/tableR1_f2.qza --p-sampling-depth 1352 --m-metadata-file maps/sky2020mapRBCL_combined_repsremoved.txt --output-dir final/core_metricsRBCLR1 --verbose

qiime diversity core-metrics-phylogenetic --i-phylogeny rooted-treeRBCL.qza --i-table split/tableR2_f2.qza --p-sampling-depth 1352 --m-metadata-file maps/sky2020mapRBCL_combined_repsremoved.txt --output-dir final/core_metricsRBCLR2 --verbose

qiime diversity core-metrics-phylogenetic --i-phylogeny rooted-treeRBCL.qza --i-table split/tableR3_f2.qza --p-sampling-depth 1352 --m-metadata-file maps/sky2020mapRBCL_combined_repsremoved.txt --output-dir final/core_metricsRBCLR3 --verbose

qiime diversity core-metrics-phylogenetic --i-phylogeny rooted-treeRBCL.qza --i-table split/tableR4_f2.qza --p-sampling-depth 1130 --m-metadata-file maps/sky2020mapRBCL_combined_repsremoved.txt --output-dir final/core_metricsRBCLR4 --verbose

qiime diversity core-metrics-phylogenetic --i-phylogeny rooted-treeRBCL.qza --i-table split/tableR5_f2.qza --p-sampling-depth 1130 --m-metadata-file maps/sky2020mapRBCL_combined_repsremoved.txt --output-dir final/core_metricsRBCLR5 --verbose

qiime diversity core-metrics-phylogenetic --i-phylogeny rooted-treeRBCL.qza --i-table split/tableR6_f2.qza --p-sampling-depth 1130 --m-metadata-file maps/sky2020mapRBCL_combined_repsremoved.txt --output-dir final/core_metricsRBCLR6 --verbose

qiime diversity core-metrics-phylogenetic --i-phylogeny rooted-treeRBCL.qza --i-table split/tableR7_f2.qza --p-sampling-depth 1130 --m-metadata-file maps/sky2020mapRBCL_combined_repsremoved.txt --output-dir final/core_metricsRBCLR7 --verbose


 qiime feature-table merge \
     --i-tables final/core_metricsRBCLR0/rarefied_table.qza \
        --i-tables final/core_metricsRBCLR1/rarefied_table.qza \
        --i-tables final/core_metricsRBCLR2/rarefied_table.qza \
        --i-tables final/core_metricsRBCLR3/rarefied_table.qza \
	--i-tables final/core_metricsRBCLR4/rarefied_table.qza \
 	--i-tables final/core_metricsRBCLR5/rarefied_table.qza \
 	--i-tables final/core_metricsRBCLR6/rarefied_table.qza \
 	--i-tables final/core_metricsRBCLR7/rarefied_table.qza \
  	--o-merged-table master_table_rarefied.qza

# qiime diversity core-metrics-phylogenetic --i-phylogeny rooted-treeRBCL.qza --i-table split/tableR0_f2.qza --p-sampling-depth 1076 --m-metadata-file maps/SI2018mapRBCL.txt --output-dir final/core_metricsRBCLR0 --verbose

# qiime diversity core-metrics-phylogenetic --i-phylogeny rooted-treeRBCL.qza --i-table split/tableR1_f2.qza --p-sampling-depth 1194 --m-metadata-file maps/SI2019_R1mapRBCL.txt --output-dir final/core_metricsRBCLR1 --verbose


#if you want to specify the number of parallel cores running, add this to the code
--p-n-jobs 8



